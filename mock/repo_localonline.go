// Code generated by MockGen. DO NOT EDIT.
// Source: repo/local_online/interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	client "github.com/img21326/fb_chat/ws/client"
)

// MockLocalOnlineRepoInterface is a mock of LocalOnlineRepoInterface interface.
type MockLocalOnlineRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLocalOnlineRepoInterfaceMockRecorder
}

// MockLocalOnlineRepoInterfaceMockRecorder is the mock recorder for MockLocalOnlineRepoInterface.
type MockLocalOnlineRepoInterfaceMockRecorder struct {
	mock *MockLocalOnlineRepoInterface
}

// NewMockLocalOnlineRepoInterface creates a new mock instance.
func NewMockLocalOnlineRepoInterface(ctrl *gomock.Controller) *MockLocalOnlineRepoInterface {
	mock := &MockLocalOnlineRepoInterface{ctrl: ctrl}
	mock.recorder = &MockLocalOnlineRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocalOnlineRepoInterface) EXPECT() *MockLocalOnlineRepoInterfaceMockRecorder {
	return m.recorder
}

// FindUserByID mocks base method.
func (m *MockLocalOnlineRepoInterface) FindUserByID(userId uint) (*client.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindUserByID", userId)
	ret0, _ := ret[0].(*client.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindUserByID indicates an expected call of FindUserByID.
func (mr *MockLocalOnlineRepoInterfaceMockRecorder) FindUserByID(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindUserByID", reflect.TypeOf((*MockLocalOnlineRepoInterface)(nil).FindUserByID), userId)
}

// Register mocks base method.
func (m *MockLocalOnlineRepoInterface) Register(client *client.Client) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Register", client)
}

// Register indicates an expected call of Register.
func (mr *MockLocalOnlineRepoInterfaceMockRecorder) Register(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockLocalOnlineRepoInterface)(nil).Register), client)
}

// UnRegister mocks base method.
func (m *MockLocalOnlineRepoInterface) UnRegister(client *client.Client) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnRegister", client)
}

// UnRegister indicates an expected call of UnRegister.
func (mr *MockLocalOnlineRepoInterfaceMockRecorder) UnRegister(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnRegister", reflect.TypeOf((*MockLocalOnlineRepoInterface)(nil).UnRegister), client)
}
