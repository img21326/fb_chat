// Code generated by MockGen. DO NOT EDIT.
// Source: repo/user/interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	user "github.com/img21326/fb_chat/repo/user"
)

// MockUserRepoInterFace is a mock of UserRepoInterFace interface.
type MockUserRepoInterFace struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepoInterFaceMockRecorder
}

// MockUserRepoInterFaceMockRecorder is the mock recorder for MockUserRepoInterFace.
type MockUserRepoInterFaceMockRecorder struct {
	mock *MockUserRepoInterFace
}

// NewMockUserRepoInterFace creates a new mock instance.
func NewMockUserRepoInterFace(ctrl *gomock.Controller) *MockUserRepoInterFace {
	mock := &MockUserRepoInterFace{ctrl: ctrl}
	mock.recorder = &MockUserRepoInterFaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepoInterFace) EXPECT() *MockUserRepoInterFaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserRepoInterFace) Create(u *user.UserModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserRepoInterFaceMockRecorder) Create(u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserRepoInterFace)(nil).Create), u)
}

// FindByFbID mocks base method.
func (m *MockUserRepoInterFace) FindByFbID(FbId string) (*user.UserModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByFbID", FbId)
	ret0, _ := ret[0].(*user.UserModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByFbID indicates an expected call of FindByFbID.
func (mr *MockUserRepoInterFaceMockRecorder) FindByFbID(FbId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByFbID", reflect.TypeOf((*MockUserRepoInterFace)(nil).FindByFbID), FbId)
}
