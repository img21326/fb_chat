// Code generated by MockGen. DO NOT EDIT.
// Source: repo/online/interface.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOnlineRepoInterface is a mock of OnlineRepoInterface interface.
type MockOnlineRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOnlineRepoInterfaceMockRecorder
}

// MockOnlineRepoInterfaceMockRecorder is the mock recorder for MockOnlineRepoInterface.
type MockOnlineRepoInterfaceMockRecorder struct {
	mock *MockOnlineRepoInterface
}

// NewMockOnlineRepoInterface creates a new mock instance.
func NewMockOnlineRepoInterface(ctrl *gomock.Controller) *MockOnlineRepoInterface {
	mock := &MockOnlineRepoInterface{ctrl: ctrl}
	mock.recorder = &MockOnlineRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOnlineRepoInterface) EXPECT() *MockOnlineRepoInterfaceMockRecorder {
	return m.recorder
}

// CheckUserOnline mocks base method.
func (m *MockOnlineRepoInterface) CheckUserOnline(ctx context.Context, clientID uint) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckUserOnline", ctx, clientID)
	ret0, _ := ret[0].(bool)
	return ret0
}

// CheckUserOnline indicates an expected call of CheckUserOnline.
func (mr *MockOnlineRepoInterfaceMockRecorder) CheckUserOnline(ctx, clientID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckUserOnline", reflect.TypeOf((*MockOnlineRepoInterface)(nil).CheckUserOnline), ctx, clientID)
}

// Register mocks base method.
func (m *MockOnlineRepoInterface) Register(ctx context.Context, clientID uint) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Register", ctx, clientID)
}

// Register indicates an expected call of Register.
func (mr *MockOnlineRepoInterfaceMockRecorder) Register(ctx, clientID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockOnlineRepoInterface)(nil).Register), ctx, clientID)
}

// UnRegister mocks base method.
func (m *MockOnlineRepoInterface) UnRegister(ctx context.Context, clientID uint) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UnRegister", ctx, clientID)
}

// UnRegister indicates an expected call of UnRegister.
func (mr *MockOnlineRepoInterfaceMockRecorder) UnRegister(ctx, clientID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnRegister", reflect.TypeOf((*MockOnlineRepoInterface)(nil).UnRegister), ctx, clientID)
}
